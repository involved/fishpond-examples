.page-header
  %h1 Javascript Templates
  %br
  .row
    .span9
      %p
        %strong Powered by: 
        = link_to "Underscore JS", "http://underscorejs.org/", :target => "_blank"

.row
  .span5
    %form#fishpond.form-horizontal.well
      %h2 Tags
      %fieldset.tags
        -# Sliders Dynamically added

      %h2 Filters     
      %fieldset.filters
        .control-group
          .control-label
            Only show:

      %span.label
        Filters currently not hooked up.

  .span6.offset1
    %h2 Results
    #results
      %ul.thumbnails


- content_for :css do
  :css
    .loading .shortlist{
      display: none;
    }
    
    .loaded .shortlist{
      display: block;
    }

    .shortlist.active{
      border: red 1px solid;
    }


    #results ul li .thumbnail{
      min-height: 100px;
      text-align: center;
      position: relative;
      //background: #fff;
    }
      #results ul li.loading .thumbnail{
        background: url(/images/common/loading.gif) no-repeat center center;
        color: #999;
      }

      #results ul li .thumbnail .title{
        height: 20px;
        display: block;
      }

    .modal-body.loading{
      background: #fff url(/images/common/loading.gif) no-repeat center center;
      min-height: 200px;
    }
       #results ul li .thumbnail .details{
        padding-top: 10px;
       }

        #results ul li .thumbnail .details{
          width: 100%;
          height: 120px;
          text-align: center;
          margin-bottom: 5px;
        }

       #results ul li .thumbnail .shortlist{
        position: absolute;
        top: -5px;
        left: -5px;
      }


- content_for :javascript do
  = javascript_include_tag "https://raw.github.com/d0ugal/locache/master/build/locache.js"
  = javascript_include_tag "http://underscorejs.org/underscore.js"


  // JAVSCRIPT TEMPLATES
  %script{:id => "fishTemplate", :type => "text/html"}
    %li{ :data => { :id => "{{ fish.id }}" }, :class => "{{ status }} span2" }
      .thumbnail
        %strong.title {{ fish.title }}      
        .details
          {[ if (!_.isEmpty(metadata)) { ]}
          {{ fishDetailsData }}
          {[ } ]}

  %script{:id => "tagsTemplate", :type => "text/html"}
    .control-group
      %label.control-label
        {{ name }}
        %output (10)
      .controls
        %input{ :id => "query_tag_{{ token }}", :name => "query[tags][{{ token }}]", :type => "hidden", :value => "10", :data => { :slug => "{{ name }}" } }
        .slider.span2{ :data => { :target => "query[tags][{{ token }}]" } }

  %script{:id => "filtersTemplate", :type => "text/html"}
    .control
      %label.checkbox
        %input{ :id => "query_filter_{{ token.id }}", :name => "query[filters][{{ token.id }}]", :type => "checkbox", :value => "0", :data => { :slug => "{{ token.slug }}" } }
        {{ token.name }}

  %script{:id => "fishDetailsTemplate", :type => "text/html"}
    %a{ :href => "#" }
      %img{ :src => "{{ metadata.thumbnail_url }}", :alt => "{{ metadata.title }}", :class => "profile" }
    = #link_to "Open", "{{ metadata.url }}", :class => "btn btn-mini btn-primary"
    = #link_to "More Info", "#fishInfo", :class => "btn btn-mini launch-modal"


  :javascript
    var setupFishpond = function(fishpond){ // you must define this function in your demo, if you want hooks to the fishpond
        
      // Change underscore.js tenplate settings to use moustache syntax
      _.templateSettings = {
        evaluate : /\{\[([\s\S]+?)\]\}/g,
        interpolate : /\{\{(.+?)\}\}/g
      };

      fishpond.loading(function(percent){
        $("#loading .progress").removeClass("progress-striped");
        $("#loading .bar").css({width: (percent * 100) + "%"});

        // Clear LocalStorage of fish data
        locache.flush();
      });

      fishpond.ready(function(pond){
        // Loading transitions
        $("#loading").fadeOut(0);
        $("#demo").fadeIn(400);
        $("#demo h1").append(' "' + pond.name + '"');       

        // Setup Templates
        var tagsTemplate = _.template($( "#tagsTemplate" ).html());
        var filtersTemplate = _.template($( "#filtersTemplate" ).html());

        // Generate Tags
        $.each(pond.tag_ids, function(name, token){ 
          var tagsData = { 
            name : name, 
            token : token
          }
          $("fieldset.tags").append( tagsTemplate( tagsData ));
        });

        // Generate Filters
        $.each(pond.filters, function(index, token){
          var filtersData = { 
            token : token
          }
          $("fieldset.filters .control-group").append( filtersTemplate( filtersData ));
        });

        // jQuery UI Slider
        $(".slider").slider({
          value: 10,
          min: 0,
          max: 20,
          step: 1,
          slide: function(e, ui){
            var output = $(this).parents('.control-group').find('output');
            var hiddenField = $("input[name='" + $(this).data('target') + "']");
            var value = ui['value'];

            if(value.toString() != hiddenField.val().toString()){
              hiddenField.val(value);
              output.html(output.html().split("(")[0] + "(" + value.toString() + ")");

              var tags = {};
              var filters = {};
              $("form#fishpond input").each(function(){
                //console.error($(this).data('slug'));
                tags[$(this).data('slug')] = $(this).val();
              });
              fishpond.query(tags, filters);
            }
          }
        });

        fishpond.query({}, {});
      });

      fishpond.resultsUpdated(function(results){
        // Clear old results
        $("#results ul").empty();

        // Generate Results
        for(var i = 0; i < results.length; i++){
          var fish = resultManager(results[i]);
          var fishID = results[i].fish.id;
          var fishDetails;
          var status = "loading";
          var metadata = function () {
            return fish.getMetadata();
          };
          
          if (fish.getMetadata() === null){
            $.when( fish.setMetadata() ).then( function(result){
              fish = resultManager(result);
              fish.updateTemplate(metadata());
            });
          } else {
            fish.getMetadata();
            status = "loaded";

            // Inject cached Metadata into Template
            var fishDetailsTemplate = _.template($( "#fishDetailsTemplate" ).html());
            var fishDetailsData = { 
              metadata : fish.getMetadata()
            }
            console.log(fish.getMetadata())
            fishDetails = fishDetailsTemplate( fishDetailsData );
          }      

          // Create Fish from Template
          var fishTemplate = _.template($( "#fishTemplate" ).html());
          var resultData = { 
            fish : results[i].fish, 
            status : status,
            metadata : fish.getMetadata(),
            fishDetailsData : fishDetails
          }

          // Update Results list
          $('#results ul').append( fishTemplate( resultData ));
        }
      });

      var resultManager = function (result) {
        var fishID = result.fish.id;
        var fishDetailsTemplate = _.template($( "#fishDetailsTemplate" ).html());
        
        return {
          setMetadata: function () {
            console.log("Result -> " + result.fish.id);
            var defered = new $.Deferred();
            fishpond.get_fish(fishID, function(data){
              locache.set("metadata-"+fishID, data);
              defered.resolve(result);
            });    
            return defered.promise();
          },
          getMetadata: function () {
            return locache.get("metadata-"+fishID);
          },
          updateTemplate: function (metadata) {
            var fishResult = $("#results").find("li[data-id='" + fishID + "']");
            var fishDetailsData = { 
              metadata : metadata
            }
            fishResult.removeClass("loading").addClass("loaded");
            return fishResult.find(".details").html( fishDetailsTemplate( fishDetailsData ));
          }
        };
      };  

    };