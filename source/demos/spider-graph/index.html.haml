.page-header
  %h1 Spider Graph Demo
  %br
  %p using #{link_to "jmstriegel spidergraph", "https://github.com/jmstriegel/jquery.spidergraph"}. Relies on Canvas

.row
  #radar.span6

  #results.span5.offset1
    %h2 Results
    %ul.thumbnails.results
    

-# content_for :css do
:css
  #radar{
    position: relative;
    height: 400px;
  }


- content_for :javascript do
  = javascript_include_tag "https://raw.github.com/jmstriegel/jquery.spidergraph/master/assets/js/jquery.spidergraph.js"

  :javascript
    var setupFishpond = function(fishpond){ // you must define this function in your demo, if you want hooks to the fishpond
      
      // Spidergraph Array Variables
      var tagValues = [];
      var tagList = [];
      

      fishpond.resultsUpdated(function(results){
        //console.log(results);

        $(".results li").remove(); // Clear old results

        for(var i = 0; i < results.length; i++){
          var li = $("<li></li>");
          var thumbnail = $("<div></div>");
          thumbnail.html(results[i].fish.title);
          li.append(thumbnail);
          $(".results").append(li);
        }

      });

      fishpond.ready(function(pond){
        $("#loading").fadeOut(0);
        $("#demo").fadeIn(400);
        $("#demo h1").append(' "' + pond.name + '"');       
        
        // Create Array for Spidergraph
        $.each(pond.tag_ids, function(name, token){
          tagList.push(name);
          tagValues.push(6); // Inital value
        });

        spidergraph(tagList, tagValues);
       
        // Dynamically Generate Form Controls
        var form = $("form fieldset");
        var controlGroup;

        $.each(pond.tag_ids, function(name, token){ 
          controlGroup = $("" +
            "<div class='control-group'>" +
              "<label class='control-label'>" +
                name + " <output>(6)</output>" +
              "</label>" +
              "<div class='controls'>" +
                "<input id='query_tag_"+token+"' data-slug='"+name+"' name='query[tags]["+token+"]' type='hidden' value='6'>" +
                "<div class='slider span2' data-target='query[tags]["+token+"]'></div>" +
              "</div>" +
            "</div>");

          form.append(controlGroup);
        });

        fishpond.query({}, {});

      });

      fishpond.loading(function(percent){
        $("#loading .progress").removeClass("progress-striped");
        $("#loading .bar").css({width: (percent * 100) + "%"});
      });


      function spidergraph(tagList, tagValues){   
        $('#radar').spidergraph({
            'fields': tagList,
            'strokewidth': 2,
            'handlewidth': 4,
            'increments': 11,
            'minrad': 0,
            'gridcolor': 'rgba(20,20,20,1)'   
        });
        
        $('#radar').spidergraph('resetdata');
        
        $('#radar').spidergraph('setactivedata', { 
          'strokecolor': 'rgba(0, 41, 199,0.8)',
          'fillcolor': 'rgba(10,77,255,0.6)',
          'data': tagValues
        });

        $('#radar').bind('spiderdatachange', function( ev, data ) {
          var tags = {};
          var filters = {};
          var new_value;

          $.each(data, function(index, value) { 
            console.log(tagList[index] + ': ' + value); 

            tags[tagList[index]] = value;
          });

          fishpond.query(tags, filters);
        });
      }
    };